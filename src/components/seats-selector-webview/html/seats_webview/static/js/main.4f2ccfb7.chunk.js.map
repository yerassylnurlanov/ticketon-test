{"version":3,"sources":["Seat.js","App.js","index.js"],"names":["seatColor","id","busy","selectedSeats","indexOf","Seat","_ref","x","y","w","h","onClick","react_default","a","createElement","width","height","key","fill","dy","dx","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","level","setLevel","_useState3","_useState4","setSelectedSeats","useEffect","window","TICKETON_LEVEL_DATA","levelData","seats","viewBox","concat","map","seat","src_Seat","assign","filter","seatId","ReactNativeWebView","postMessage","JSON","stringify","length","error","toConsumableArray","addSeatToSelection","ReactDOM","render","src_App","document","getElementById"],"mappings":"yJAEA,SAASA,EAAUC,EAAIC,EAAMC,GACzB,OAAGD,EACQ,UAGRC,EAAcC,QAAQH,IAAO,EACrB,UAGJ,UAuBII,MAhBf,SAAAC,GAAgE,IAAhDL,EAAgDK,EAAhDL,GAAIM,EAA4CD,EAA5CC,EAAGC,EAAyCF,EAAzCE,EAAGC,EAAsCH,EAAtCG,EAAGC,EAAmCJ,EAAnCI,EAAGR,EAAgCI,EAAhCJ,KAAMC,EAA0BG,EAA1BH,cAAeQ,EAAWL,EAAXK,QACjD,OACIC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMP,EAAGA,EACTC,EAAGA,EACHO,MAAON,EACPO,OAAQN,EACRO,IAAKhB,EACLiB,KAAMlB,EAAUC,EAAIC,EAAMC,GAC1BQ,QAAST,EAAO,KAAOS,IAEtBT,GAAQU,EAAAC,EAAAC,cAAA,QAAMP,EAAGA,EAAGC,EAAGA,EAAGW,GAAI,GAAIC,GAAI,EAAGC,SAAU,IAA3C,OC4CJC,MArEf,WAAe,IAAAC,EACaC,mBAAS,IADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACCI,EADDJ,EAAA,GAAAK,EAE6BN,mBAAS,IAFtCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEN3B,EAFM4B,EAAA,GAESC,EAFTD,EAAA,GAIbE,oBAAU,WACJC,OAAOC,oBACTN,EAASK,OAAOC,qBAEhBN,EAASO,IAEV,IAEH,IAwCQC,EAAUT,EAAVS,MAER,OAAKA,EAOHzB,EAAAC,EAAAC,cAAA,OAAKwB,QAAO,OAAAC,OAASX,EAAMb,MAAf,KAAAwB,OAAwBX,EAAMZ,SACvCqB,EAAMG,IAAI,SAAAC,GAAI,OACb7B,EAAAC,EAAAC,cAAC4B,EAADhB,OAAAiB,OAAA,CAAM1B,IAAKwB,EAAKxC,IAAQwC,EAAxB,CAA8BtC,cAAeA,EAAeQ,QAAS,kBAnDhD,SAACV,GAC1B,GAAIE,EAAcC,QAAQH,IAAO,EAU/B,OATA+B,EAAiB7B,EAAcyC,OAAO,SAAAC,GAAM,OAAIA,IAAW5C,UAExDiC,OAAOY,oBACRZ,OAAOY,mBAAmBC,YACxBC,KAAKC,UAAU,CACbZ,MAAOlC,MAOXA,EAAc+C,QAAU,EACvBhB,OAAOY,oBACRZ,OAAOY,mBAAmBC,YACxBC,KAAKC,UAAU,CACbE,MAAO,0BAQfnB,EAAgB,GAAAO,OAAAb,OAAA0B,EAAA,EAAA1B,CAAKvB,GAAL,CAAoBF,KAEjCiC,OAAOY,oBACRZ,OAAOY,mBAAmBC,YACxBC,KAAKC,UAAU,CACbZ,MAAOlC,MAoBkEkD,CAAmBZ,EAAKxC,WAPrGW,EAAAC,EAAAC,cAAA,0BCxDNwC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4f2ccfb7.chunk.js","sourcesContent":["import React from 'react';\n\nfunction seatColor(id, busy, selectedSeats) {\n    if(busy) {\n        return '#EBEFF2'\n    }\n\n    if(selectedSeats.indexOf(id) >= 0) {\n        return '#ff9500';\n    }\n\n    return '#2ece16';\n}\n\n/**\n * @param {*} seat \n * @param {Function} onClick \n */\nfunction Seat({ id, x, y, w, h, busy, selectedSeats, onClick }) {\n    return (\n        <g>\n          <rect x={x}\n          y={y}\n          width={w}\n          height={h}\n          key={id}\n          fill={seatColor(id, busy, selectedSeats)}\n          onClick={busy ? null : onClick}\n          />\n          {busy && <text x={x} y={y} dy={13} dx={3} fontSize={14}>X</text>}\n        </g>\n    );\n}\n\nexport default Seat;","import React, { useEffect, useState } from 'react';\nimport levelData from './level.json';\nimport Seat from './Seat';\n\nfunction App() {\n  const [level, setLevel] = useState({});\n  const [selectedSeats, setSelectedSeats] = useState([]);\n\n  useEffect(() => {\n    if (window.TICKETON_LEVEL_DATA) {\n      setLevel(window.TICKETON_LEVEL_DATA);\n    } else {\n      setLevel(levelData);\n    }\n  }, []);\n\n  const addSeatToSelection = (id) => {\n    if (selectedSeats.indexOf(id) >= 0) {\n      setSelectedSeats(selectedSeats.filter(seatId => seatId !== id));\n\n      if(window.ReactNativeWebView) {\n        window.ReactNativeWebView.postMessage(\n          JSON.stringify({\n            seats: selectedSeats\n          })\n        );\n      }\n      return;\n    }\n\n    if (selectedSeats.length >= 5 ) {\n      if(window.ReactNativeWebView) {\n        window.ReactNativeWebView.postMessage(\n          JSON.stringify({\n            error: 'five_seats_selected'\n          })\n        );\n      };\n\n      return;\n    }\n\n    setSelectedSeats([...selectedSeats, id]);\n    \n    if(window.ReactNativeWebView) {\n      window.ReactNativeWebView.postMessage(\n        JSON.stringify({\n          seats: selectedSeats\n        })\n      );\n    }\n  }\n\n  /**\n   * @type {Array|null} seats\n   */\n  const { seats } = level;\n\n  if (!seats) {\n    return (\n      <h1>No seats :(</h1>\n    );\n  }\n\n  return (\n    <svg viewBox={`0 0 ${level.width} ${level.height}`}>\n      {seats.map(seat => (\n        <Seat key={seat.id} {...seat} selectedSeats={selectedSeats} onClick={() => addSeatToSelection(seat.id)} />\n      ))}\n    </svg>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}