{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","hall","setHall","useEffect","window","TICKETON_HALL_DATA","hallData","levels","react_default","a","createElement","viewBox","width","keys","map","key","level","split","d","reduce","accum","coordinate","index","concat","color","seats_free","pathProps","fill","fillOpacity","stroke","strokeWidth","onClick","ReactNativeWebView","postMessage","id","assign","ReactDOM","render","src_App","document","getElementById"],"mappings":"kJAqDeA,MAlDf,WAAe,IAAAC,EAEWC,mBAAS,IAFpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAENK,EAFMH,EAAA,GAEAI,EAFAJ,EAAA,GAIbK,oBAAU,WACJC,OAAOC,mBACTH,EAAQE,OAAOC,oBAEfH,EAAQI,KARC,IAYLC,EAAWN,EAAXM,OAER,OAAKA,EAKHC,EAAAC,EAAAC,cAAA,OAAKC,QAAQ,cAAcC,MAAM,QAC9Bb,OAAOc,KAAKN,GAAQO,IAAI,SAAAC,GAAG,OAAIR,EAAOQ,KAAMD,IAAI,SAAAE,GAC/C,IAAMC,EAAQD,EAAMF,IAAIG,MAAM,KACxBC,EAAID,EAAME,OAAO,SAACC,EAAOC,EAAYC,GACzC,OAAIA,EAAQ,IAAM,EACTF,EAAK,GAAAG,OAAgB,IAAVD,EAAc,GAAK,MAAzBC,OAAgCN,EAAMK,GAAtC,KAAAC,OAAgDN,EAAMK,EAAQ,GAA9D,KAELF,GAER,MAEGI,EAA6B,IAArBR,EAAMS,WAAmB,UAAzB,IAAAF,OAAyCP,EAAMQ,OAEvDE,EAAY,CAChBC,KAAMH,EACNI,YAAa,GACbC,OAAQL,EACRM,YAAa,EACbC,QAA8B,IAArBf,EAAMS,WAAmB,KAAO,WACpCrB,OAAO4B,oBACR5B,OAAO4B,mBAAmBC,YAAYjB,EAAMkB,MAKlD,OAAO1B,EAAAC,EAAAC,cAAA,OAAAX,OAAAoC,OAAA,CAAMjB,EAAGA,EAAI,KAASQ,OA7B1BlB,EAAAC,EAAAC,cAAA,4BCdX0B,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.65072dd1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport hallData from './hall.json';\n\nfunction App() {\n\n  const [hall, setHall] = useState({});\n\n  useEffect(() => {\n    if (window.TICKETON_HALL_DATA) {\n      setHall(window.TICKETON_HALL_DATA);\n    } else {\n      setHall(hallData);\n    }\n  });\n\n  const { levels } = hall;\n\n  if (!levels) {\n    return <h1>No sectors :(</h1>\n  }\n\n  return (\n    <svg viewBox=\"0 0 590 390\" width=\"100%\">\n      {Object.keys(levels).map(key => levels[key]).map(level => {\n        const split = level.map.split(',');\n        const d = split.reduce((accum, coordinate, index) => {\n          if (index % 2 === 0) {\n            return accum + `${index === 0 ? '' : 'L '}${split[index]},${split[index + 1]} `;\n          } else {\n            return accum;\n          }\n        }, 'M ');\n\n        const color = level.seats_free === 0 ? '#3e3e3e' : `#${level.color}`;\n\n        const pathProps = {\n          fill: color,\n          fillOpacity: 0.5,\n          stroke: color,\n          strokeWidth: 1,\n          onClick: level.seats_free === 0 ? null : () => {\n            if(window.ReactNativeWebView) {\n              window.ReactNativeWebView.postMessage(level.id);\n            }\n          }\n        };\n        \n        return <path d={d + 'z'} {...pathProps} />\n      })}\n    </svg>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}